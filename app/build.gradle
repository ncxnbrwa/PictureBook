import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'danny.asm.lifecycle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.picturebook"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //APP的build.gradle设置支持的SO库架构
            abiFilters 'armeabi'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${applicationId}_${buildType.name}_${releaseTime()}_${versionName}.apk"
        }
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.shuyu:GSYVideoPlayer:7.1.3'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
//    implementation 'com.jayway.android.robotium:robotium-solo:5.6.0'
//    implementation 'com.jakewharton:butterknife:8.0.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.0.1'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'io.reactivex:rxjava:1.2.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'
    implementation 'com.google.dagger:dagger:2.7'
    //okhttp的一个封装库
    implementation 'cn.finalteam:okhttpfinal:2.0.7'
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

task A {
    println 'this is task A'
    doFirst {
        println 'task A is execute'
    }
}

task B {
    dependsOn 'A'
    println 'this is task B'
    doFirst {
        println 'task B is execute'
    }
}

task my_task {
    doFirst {
        println 'today is' + getDate()
    }
}

def getDate() {
    def sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss", Locale.CHINA)
    def nowDateStr = "\"" + sdf.format(new Date()) + "\""
    return nowDateStr
//    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

// type: JavaCompile 指定是编译 Java 类的 task；
task compile(type: JavaCompile) {
    source = './src/main/java/test/' //指定需要编译类的文件路径
    include "Demo.java" //指定需要编译的类名称
    classpath = files('.')
    destinationDir = file('./build') //指定编译后,生成class文件保存路径
}

